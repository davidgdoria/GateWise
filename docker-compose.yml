version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=db
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=${ALGORITHM}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
      - CAMERA_DEVICE_ID=${CAMERA_DEVICE_ID}
      - CAMERA_RESOLUTION_WIDTH=${CAMERA_RESOLUTION_WIDTH}
      - CAMERA_RESOLUTION_HEIGHT=${CAMERA_RESOLUTION_HEIGHT}
      - OCR_CONFIDENCE_THRESHOLD=${OCR_CONFIDENCE_THRESHOLD}
      - DEBUG=${DEBUG}
    volumes:
      - ./backend:/app
      - captured_images:/app/captured_images
    depends_on:
      - db
    networks:
      - gatewise_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api
    depends_on:
      - backend
    networks:
      - gatewise_network

  db:
    image: postgres:13
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - gatewise_network

volumes:
  postgres_data:
  captured_images:

networks:
  gatewise_network:
    driver: bridge 